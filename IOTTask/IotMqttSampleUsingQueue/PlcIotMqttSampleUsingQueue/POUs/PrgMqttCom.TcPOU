<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.5">
  <POU Name="PrgMqttCom" Id="{c70f107a-6ca5-4bfb-b775-e2929cbf9dae}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM PrgMqttCom
VAR
	
	StartMosquitto : BOOL :=FALSE;
	fbMosquittoLaunch: NT_StartProcess;
	
	fbMqttClient : FB_IotMqttClient;
	bSetParameter : BOOL := TRUE ;
	bConnect : BOOL := TRUE ;
	
	(* published message *)
	sTopicPub : STRING(255) := 'remote/thingspeak/1226961/publish/H1SCE16XLESMI7KP'; //channelID and writeAPIkey must be changed to your own
	// from thingspeak channel profile
	sPayloadPub : STRING(255);
	i: UDINT := 0 ;
	switch : BOOL := TRUE;
	fbTimer : TON := (PT:=T#15S);
	
	(* received message *)
	(*bSubscribed : BOOL;
	sTopicSub : STRING(255) := 'test';
	{attribute 'TcEncoding':='UTF-8'}
	sTopicRcv : STRING(255);
	{attribute 'TcEncoding':='UTF-8'}
	sPayloadRcv : STRING(255);
	fbMessageQueue : FB_IotMqttMessageQueue;
	fbMessage : FB_IotMqttMessage;*)
	
	hrErrorOccurred : HRESULT; // contains the latest occurred error
	TMOUT: TIME;
	partAtSensor: BOOL;
	partCount: INT;
END_VAR

]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF bSetParameter THEN
	fbMqttClient.sHostName:= '192.168.43.246'; // address of host, your computer and adpter
	fbMqttClient.nHostPort:= 1883; // port which bridge are listening to
	fbMqttClient.sTopicPrefix:= ''; 
	bSetParameter := FALSE;
END_IF

// This is for starting mosquitto, you can modify this or then just start mosquitto manually
//IF StartMosquitto THEN
//	fbMosquittoLaunch( PATHSTR :='c:\Program Files (x86)\mosquitto\Mosquitto.exe',
//					  COMNDLINE:='-c E:\AFOF\IOTTask\mosquittoConfFiles\thingSpeakBridgeTLS.conf'	,
//						START :=  StartMosquitto, 
//						TMOUT := T#3S);
						
	//StartMosquitto :=FALSE;
//END_IF

(*establishing cnnection*)
fbMqttClient.Execute(bConnect);
IF fbMqttClient.bError THEN
	// add your error logging here
	hrErrorOccurred := fbMqttClient.hrErrorCode;
END_IF

(* get messages from subscribed topic *)
(*IF fbMessageQueue.nQueuedMessages > 0 THEN
	IF fbMessageQueue.Dequeue(fbMessage:=fbMessage) THEN
		fbMessage.GetTopic(pTopic:=ADR(sTopicRcv), nTopicSize:=SIZEOF(sTopicRcv) );
		fbMessage.GetPayload(pPayload:=ADR(sPayloadRcv), nPayloadSize:=SIZEOF(sPayloadRcv), bSetNullTermination:=FALSE);
	END_IF
END_IF*)

IF fbMqttClient.bConnected THEN
	(* Subscribe to topuc *)
	(*IF NOT bSubscribed THEN
		bSubscribed := fbMqttClient.Subscribe(sTopic:=sTopicSub, eQoS:=TcIotMqttQos.AtMostOnceDelivery);
		IF fbMqttClient.bError THEN
			// add your error logging here
			hrErrorOccurred := fbMqttClient.hrErrorCode;
		END_IF
	END_IF*)
	fbTimer(IN:=TRUE);
	//IF fbTimer.Q THEN // publish new payload every 15 second
		//fbTimer(IN:=FALSE);
		IF partAtSensor THEN
			partCount := partCount + 1;
			partAtSensor := FALSE;
		END_IF
		fbMqttClient.Publish(	sTopic:= sTopicPub, 
								pPayload:= ADR(sPayloadPub), nPayloadSize:= LEN2(ADR(sPayloadPub))+1, 
								eQoS:= TcIotMqttQos.AtMostOnceDelivery, bRetain:= FALSE, bQueue:= FALSE );
								sPayloadPub := CONCAT('field1=', TO_STRING(partCount));
		IF fbMqttClient.bError THEN
			// add your error logging here
			hrErrorOccurred := fbMqttClient.hrErrorCode;
		END_IF
	END_IF
//END_IF]]></ST>
    </Implementation>
    <LineIds Name="PrgMqttCom">
      <LineId Id="6" Count="0" />
      <LineId Id="8" Count="1" />
      <LineId Id="11" Count="0" />
      <LineId Id="126" Count="0" />
      <LineId Id="18" Count="0" />
      <LineId Id="309" Count="0" />
      <LineId Id="267" Count="0" />
      <LineId Id="266" Count="0" />
      <LineId Id="268" Count="0" />
      <LineId Id="273" Count="1" />
      <LineId Id="276" Count="0" />
      <LineId Id="275" Count="0" />
      <LineId Id="270" Count="0" />
      <LineId Id="269" Count="0" />
      <LineId Id="236" Count="0" />
      <LineId Id="19" Count="1" />
      <LineId Id="89" Count="2" />
      <LineId Id="88" Count="0" />
      <LineId Id="235" Count="0" />
      <LineId Id="92" Count="0" />
      <LineId Id="21" Count="8" />
      <LineId Id="234" Count="0" />
      <LineId Id="30" Count="0" />
      <LineId Id="94" Count="2" />
      <LineId Id="93" Count="0" />
      <LineId Id="31" Count="1" />
      <LineId Id="62" Count="0" />
      <LineId Id="33" Count="0" />
      <LineId Id="344" Count="2" />
      <LineId Id="161" Count="0" />
      <LineId Id="36" Count="1" />
      <LineId Id="40" Count="0" />
      <LineId Id="204" Count="0" />
      <LineId Id="98" Count="2" />
      <LineId Id="97" Count="0" />
      <LineId Id="41" Count="0" />
      <LineId Id="5" Count="0" />
    </LineIds>
  </POU>
</TcPlcObject>